{"ast":null,"code":"var _jsxFileName = \"/Users/aleksejaleksandrov/react-mesto-auth/src/components/Mesto.js\";\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Mesto(props) {\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const history = useHistory();\n  const email = props.userData.email;\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([result, data]) => {\n      setCurrentUser(result);\n      setCards(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.cardLike(card._id, isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user.name, user.about).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.setAvatar(avatar.avatar).then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link).then(result => {\n      setCards([result, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n  }\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header__email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, email), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"header__link\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438\")), /*#__PURE__*/React.createElement(Main, {\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onEditAvatar: handleEditAvatarClick,\n    onCardClick: handleCardClick,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    cardList: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default Mesto;","map":{"version":3,"sources":["/Users/aleksejaleksandrov/react-mesto-auth/src/components/Mesto.js"],"names":["React","useState","Link","useHistory","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","Mesto","props","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","cards","setCards","history","email","userData","useEffect","Promise","all","getUserInfo","getInitialCards","then","result","data","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","cardLike","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleCardClick","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleUpdateUser","user","setUserInfo","name","about","handleUpdateAvatar","avatar","setAvatar","handleAddPlace","addNewCard","link","signOut","localStorage","removeItem","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Mesto(props) {\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const history = useHistory();\n  const email = props.userData.email;\n\n  React.useEffect(() => {\n   Promise.all([api.getUserInfo(), api.getInitialCards()]) \n    .then(([result, data]) => {\n      setCurrentUser(result);\n      setCards(data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.cardLike(card._id, isLiked).then((newCard) => {\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then(() => {\n      const newCards = cards.filter((c) => c._id !== card._id);\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  \n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  \n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(user) {\n    api.setUserInfo(user.name, user.about)\n    .then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.setAvatar(avatar.avatar)\n    .then(result => {\n      setCurrentUser(result);\n      closeAllPopups();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n    .then(result => {\n      setCards([result, ...cards]);\n      closeAllPopups();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  function signOut(){\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n  }\n\n  return (\n        <CurrentUserContext.Provider value={currentUser}>\n          <Header>\n            <p className=\"header__email\">{email}</p>\n            <a href=\"#\" className=\"header__link\" onClick={signOut}>Выйти</a>\n          </Header>\n          <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} onCardLike={handleCardLike} onCardDelete={handleCardDelete} cardList={cards} />\n          <Footer />\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        </CurrentUserContext.Provider>\n  );\n}\n\nexport default Mesto;\n"]},"metadata":{},"sourceType":"module"}