{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._token = options.headers.authorization;\n    this._contentType = options.headers.contentType;\n  }\n\n  _sendRequest(endpoint, method, body) {\n    this._headers = {\n      authorization: this._token,\n      'Content-type': this._contentType\n    };\n    this._requestInit = {\n      method: method,\n      headers: this._headers\n    };\n\n    if (method === 'POST' || method === 'PATCH') {\n      this._requestInit.body = body;\n    }\n\n    return fetch(`${this._baseUrl}${endpoint}`, this._requestInit).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getUserInfo() {\n    return this._sendRequest('/users/me', 'GET', {});\n  }\n\n  getInitialCards() {\n    return this._sendRequest('/cards', 'GET', {});\n  }\n\n  setUserInfo(name, about) {\n    this._body = JSON.stringify({\n      name: name,\n      about: about\n    });\n    return this._sendRequest('/users/me', 'PATCH', this._body);\n  }\n\n  addNewCard(name, link) {\n    this._body = JSON.stringify({\n      name: name,\n      link: link\n    });\n    return this._sendRequest('/cards', 'POST', this._body);\n  }\n\n  cardLike(cardId, state) {\n    this._cardId = cardId;\n    this._method = state ? 'DELETE' : 'PUT';\n    return this._sendRequest('/cards/likes/' + this._cardId, this._method, {});\n  }\n\n  deleteCard(cardId) {\n    this._cardId = cardId;\n    return this._sendRequest('/cards/' + this._cardId, 'DELETE', {});\n  }\n\n  setAvatar(avatarLink) {\n    this._body = JSON.stringify({\n      avatar: avatarLink\n    });\n    return this._sendRequest('/users/me/avatar', 'PATCH', this._body);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: '67d49140-f28d-4665-8757-80e700844f4c',\n    contentType: 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/aleksejaleksandrov/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_token","headers","authorization","_contentType","contentType","_sendRequest","endpoint","method","body","_headers","_requestInit","fetch","then","res","ok","json","Promise","reject","status","getUserInfo","getInitialCards","setUserInfo","name","about","_body","JSON","stringify","addNewCard","link","cardLike","cardId","state","_cardId","_method","deleteCard","setAvatar","avatarLink","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options){\n      this._baseUrl = options.baseUrl;\n      this._token = options.headers.authorization;\n      this._contentType = options.headers.contentType;\n    }\n  \n    _sendRequest(endpoint, method, body){\n      this._headers = {\n          authorization: this._token,\n          'Content-type': this._contentType\n      };\n      this._requestInit = {\n        method: method,\n        headers: this._headers\n      };\n      if(method === 'POST' || method === 'PATCH'){\n        this._requestInit.body = body;\n      }\n      return fetch(`${this._baseUrl}${endpoint}`, this._requestInit)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n    }\n  \n    getUserInfo() {\n      return this._sendRequest('/users/me', 'GET', {});\n    }\n  \n    getInitialCards() {\n      return this._sendRequest('/cards', 'GET', {});\n    }\n  \n    setUserInfo(name, about) {\n      this._body = JSON.stringify({\n          name: name,\n          about: about\n      });\n      return this._sendRequest('/users/me', 'PATCH', this._body);\n    }\n  \n    addNewCard(name, link) {\n      this._body = JSON.stringify({\n          name: name,\n          link: link\n      });\n      return this._sendRequest('/cards', 'POST', this._body);\n    }\n  \n    cardLike(cardId, state) {\n      this._cardId = cardId;\n      this._method =  state ? 'DELETE' : 'PUT';\n      return this._sendRequest('/cards/likes/' + this._cardId, this._method, {});\n    }\n  \n    deleteCard(cardId) {\n      this._cardId = cardId;\n      return this._sendRequest('/cards/' + this._cardId, 'DELETE', {});\n    }\n  \n    setAvatar(avatarLink) {\n      this._body = JSON.stringify({\n          avatar: avatarLink\n      });\n      return this._sendRequest('/users/me/avatar', 'PATCH', this._body);\n    }\n  }\n  \n  const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n      authorization: '67d49140-f28d-4665-8757-80e700844f4c',\n      contentType: 'application/json'\n    }\n  });\n\n  export default api;"]},"metadata":{},"sourceType":"module"}